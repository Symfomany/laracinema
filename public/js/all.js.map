{"version":3,"sources":["general.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"all.js","sourcesContent":["jQuery(document).ready(function() {\n\n    \"use strict\";\n\n    // Init Theme Core\n    Core.init();\n\n\n    // Init Widget Demo JS\n    // demoHighCharts.init();\n\n    // Because we are using Admin Panels we use the OnFinish\n    // callback to activate the demoWidgets. It's smoother if\n    // we let the panels be moved and organized before\n    // filling them with content from various plugins\n\n    // Init plugins used on this page\n    // HighCharts, JvectorMap, Admin Panels\n\n    // Init Admin Panels on widgets inside the \".admin-panels\" container\n    $('.admin-panels').adminpanel({\n        grid: '.admin-grid',\n        draggable: true,\n        preserveGrid: true,\n        // mobile: true,\n        onStart: function() {\n            // Do something before AdminPanels runs\n        },\n        onFinish: function() {\n            $('.admin-panels').addClass('animated fadeIn').removeClass('fade-onload');\n\n            // Init the rest of the plugins now that the panels\n            // have had a chance to be moved and organized.\n            // It's less taxing to organize empty panels\n            demoHighCharts.init();\n            runVectorMaps(); // function below\n        },\n        onSave: function() {\n            $(window).trigger('resize');\n        }\n    });\n\n\n    // Init plugins for \".calendar-widget\"\n    // plugins: FullCalendar\n    //\n    $('#calendar-widget').fullCalendar({\n        // contentHeight: 397,\n        editable: true,\n        events: [{\n            title: 'Sony Meeting',\n            start: '2015-05-1',\n            end: '2015-05-3',\n            className: 'fc-event-success',\n        }, {\n            title: 'Conference',\n            start: '2015-05-11',\n            end: '2015-05-13',\n            className: 'fc-event-warning'\n        }, {\n            title: 'Lunch Testing',\n            start: '2015-05-21',\n            end: '2015-05-23',\n            className: 'fc-event-primary'\n        },\n        ],\n        eventRender: function(event, element) {\n            // create event tooltip using bootstrap tooltips\n            $(element).attr(\"data-original-title\", event.title);\n            $(element).tooltip({\n                container: 'body',\n                delay: {\n                    \"show\": 100,\n                    \"hide\": 200\n                }\n            });\n            // create a tooltip auto close timer\n            $(element).on('show.bs.tooltip', function() {\n                var autoClose = setTimeout(function() {\n                    $('.tooltip').fadeOut();\n                }, 3500);\n            });\n        }\n    });\n\n\n    // Init plugins for \".task-widget\"\n    // plugins: Custom Functions + jQuery Sortable\n    //\n    var taskWidget = $('div.task-widget');\n    var taskItems = taskWidget.find('li.task-item');\n    var currentItems = taskWidget.find('ul.task-current');\n    var completedItems = taskWidget.find('ul.task-completed');\n\n    // Init jQuery Sortable on Task Widget\n    taskWidget.sortable({\n        items: taskItems, // only init sortable on list items (not labels)\n        handle: '.task-menu',\n        axis: 'y',\n        connectWith: \".task-list\",\n        update: function( event, ui ) {\n            var Item = ui.item;\n            var ParentList = Item.parent();\n\n            // If item is already checked move it to \"current items list\"\n            if (ParentList.hasClass('task-current')) {\n                Item.removeClass('item-checked').find('input[type=\"checkbox\"]').prop('checked', false);\n            }\n            if (ParentList.hasClass('task-completed')) {\n                Item.addClass('item-checked').find('input[type=\"checkbox\"]').prop('checked', true);\n            }\n\n        }\n    });\n\n    // Custom Functions to handle/assign list filter behavior\n    taskItems.on('click', function(e) {\n        e.preventDefault();\n        var This = $(this);\n        var Target = $(e.target);\n\n        if (Target.is('.task-menu') && Target.parents('.task-completed').length) {\n            This.remove();\n            return;\n        }\n\n        if (Target.parents('.task-handle').length) {\n            // If item is already checked move it to \"current items list\"\n            if (This.hasClass('item-checked')) {\n                This.removeClass('item-checked').find('input[type=\"checkbox\"]').prop('checked', false);\n            }\n            // Otherwise move it to the \"completed items list\"\n            else {\n                This.addClass('item-checked').find('input[type=\"checkbox\"]').prop('checked', true);\n            }\n        }\n\n    });\n\n\n    var highColors = [bgSystem, bgSuccess, bgWarning, bgPrimary];\n\n    // Chart data\n    var seriesData = [{\n        name: 'Phones',\n        data: [5.0, 9, 17, 22, 19, 11.5, 5.2, 9.5, 11.3, 15.3, 19.9, 24.6]\n    }, {\n        name: 'Notebooks',\n        data: [2.9, 3.2, 4.7, 5.5, 8.9, 12.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]\n    }, {\n        name: 'Desktops',\n        data: [15, 19, 22.7, 29.3, 22.0, 17.0, 23.8, 19.1, 22.1, 14.1, 11.6, 7.5]\n    }, {\n        name: 'Music Players',\n        data: [11, 6, 5, 15, 17.0, 22.0, 30.8, 24.1, 14.1, 11.1, 9.6, 6.5]\n    }];\n\n    var ecomChart = $('#ecommerce_chart1');\n    if (ecomChart.length) {\n        ecomChart.highcharts({\n            credits: false,\n            colors: highColors,\n            chart: {\n                backgroundColor: 'transparent',\n                className: '',\n                type: 'line',\n                zoomType: 'x',\n                panning: true,\n                panKey: 'shift',\n                marginTop: 45,\n                marginRight: 1,\n            },\n            title: {\n                text: null\n            },\n            xAxis: {\n                gridLineColor: '#EEE',\n                lineColor: '#EEE',\n                tickColor: '#EEE',\n                categories: ['Jan', 'Feb', 'Mar', 'Apr',\n                    'May', 'Jun', 'Jul', 'Aug',\n                    'Sep', 'Oct', 'Nov', 'Dec'\n                ]\n            },\n            yAxis: {\n                min: 0,\n                tickInterval: 5,\n                gridLineColor: '#EEE',\n                title: {\n                    text: null,\n                }\n            },\n            plotOptions: {\n                spline: {\n                    lineWidth: 3,\n                },\n                area: {\n                    fillOpacity: 0.2\n                }\n            },\n            legend: {\n                enabled: true,\n                floating: false,\n                align: 'right',\n                verticalAlign: 'top',\n                x: -15\n            },\n            series: seriesData\n        });\n    }\n\n    // Widget VectorMap\n    function runVectorMaps() {\n\n        // Jvector Map Plugin\n        var runJvectorMap = function() {\n            // Data set\n            var mapData = [900, 700, 350, 500];\n            // Init Jvector Map\n            $('#WidgetMap').vectorMap({\n                map: 'us_lcc_en',\n                //regionsSelectable: true,\n                backgroundColor: 'transparent',\n                series: {\n                    markers: [{\n                        attribute: 'r',\n                        scale: [3, 7],\n                        values: mapData\n                    }]\n                },\n                regionStyle: {\n                    initial: {\n                        fill: '#E8E8E8'\n                    },\n                    hover: {\n                        \"fill-opacity\": 0.3\n                    }\n                },\n                markers: [{\n                    latLng: [37.78, -122.41],\n                    name: 'San Francisco,CA'\n                }, {\n                    latLng: [36.73, -103.98],\n                    name: 'Texas,TX'\n                }, {\n                    latLng: [38.62, -90.19],\n                    name: 'St. Louis,MO'\n                }, {\n                    latLng: [40.67, -73.94],\n                    name: 'New York City,NY'\n                }],\n                markerStyle: {\n                    initial: {\n                        fill: '#a288d5',\n                        stroke: '#b49ae0',\n                        \"fill-opacity\": 1,\n                        \"stroke-width\": 10,\n                        \"stroke-opacity\": 0.3,\n                        r: 3\n                    },\n                    hover: {\n                        stroke: 'black',\n                        \"stroke-width\": 2\n                    },\n                    selected: {\n                        fill: 'blue'\n                    },\n                    selectedHover: {}\n                },\n            });\n            // Manual code to alter the Vector map plugin to\n            // allow for individual coloring of countries\n            var states = ['US-CA', 'US-TX', 'US-MO',\n                'US-NY'\n            ];\n            var colors = [bgInfo, bgPrimaryLr, bgSuccessLr, bgWarningLr];\n            var colors2 = [bgInfo, bgPrimary, bgSuccess, bgWarning];\n            $.each(states, function(i, e) {\n                $(\"#WidgetMap path[data-code=\" + e + \"]\").css({\n                    fill: colors[i]\n                });\n            });\n            $('#WidgetMap').find('.jvectormap-marker')\n                .each(function(i, e) {\n                    $(e).css({\n                        fill: colors2[i],\n                        stroke: colors2[i]\n                    });\n                });\n        }\n\n        if ($('#WidgetMap').length) {\n            runJvectorMap();\n        }\n    }\n\n});"],"sourceRoot":"/source/"}